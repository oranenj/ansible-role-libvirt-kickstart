---
- name: 'testing libvirt access to {{ libvirt_host }}'
  virt:
    command: list_vms
    uri: "qemu+ssh://{{ libvirt_host | mandatory }}/system"
    name: '{{ vm_name }}'
  register: vm_list
- name: create tempfile
  when: 'vm_name not in vm_list.list_vms'
  tempfile:
    state: file
  register: destfile
- name: 'Rendering kickstart template to {{ destfile.path }}'
  when: 'vm_name not in vm_list.list_vms'
  template:
    mode: '0600'
    src: '{{ vm_type | mandatory }}.cfg.j2'
    dest: '{{ destfile.path }}'
- name: 'Installation info'
  when: 'vm_name not in vm_list.list_vms'
  debug:
    msg: |
      Installing {{ vm_name }} {{ vm_ip_address }}/{{ vm_netmask }}@{{ vm_interface }} on {{ libvirt_host }}
      Disk: {{ libvirt_data_dir }}/{{ vm_name }}_root.qcow2, size {{ vm_disk_size }}GiB
- name: 'Run kickstart (this may take a while. you will not see any output if virt-viewer is not installed)'
  when: 'vm_name not in vm_list.list_vms'
  command:
    argv:
      - virt-install
      - --connect
      - "qemu+ssh://{{ libvirt_host }}/system"
      - --network
      - "network={{ libvirt_network }}"
      - --vcpus
      - "{{ vm_vcpu_count | int }}"
      - --ram
      - "{{ (vm_memory_gb | int) * 1024 }}"
      - --os-variant
      - "{{ virt_install_os_variant }}"
      - --disk
      - "path={{ libvirt_data_dir }}/{{ vm_name }}_root.qcow2,size={{ vm_disk_size }},format=qcow2,bus=virtio"
      - --name
      - "{{ vm_name }}"
      - --initrd-inject
      - '{{ destfile.path }}'
      - --location
      - '{{ virt_install_location }}'
      - --noautoconsole
      - --extra-args
      - >
        ks=file:/{{ destfile.path | basename }}
        console=tty0 {% if not consistent_interface_naming %} net.ifnames=0 {% endif %}
        ip={{ vm_ip_address }}::{{ vm_gateway }}:{{ vm_netmask }}:{{ vm_name }}:{{ vm_interface }}:none
        nameserver={{ vm_nameserver }}
- name: 'Installation done'
  when: 'vm_name not in vm_list.list_vms'
  debug:
    msg: 'Installation has started. You can now connect to libvirt to follow the installation'
- name: 'VM already installed'
  when: 'vm_name in vm_list.list_vms'
  debug:
    msg: 'A VM with this name already exists on the host'
